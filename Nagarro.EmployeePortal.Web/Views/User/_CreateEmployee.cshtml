@model Nagarro.EmployeePortal.Web.User

@{
    AjaxOptions ajaxOpts = new AjaxOptions()
    {
        //Url = Url.Action("CreateNotice","Notice"),
        HttpMethod = "POST",
        OnSuccess = "OnAjaxSuccess",
        OnFailure = "OnAjaxFailure"
    };

}
<div class="modal fade">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="margin-top:30px;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h2 class="modal-title">Employee</h2>
            </div>
            <div class="modal-body" style="margin-left:30px;margin-right:30px;">
                @using (Ajax.BeginForm(null, null, ajaxOpts, new { @id = "userForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @if (Model.UserId != 0)
                        {
                            @Html.HiddenFor(model => model.UserId)
                            @Html.HiddenFor(model => model.Employee.EmployeeId)
                        }
                        <div class="form-group">
                            @Html.LabelFor(model => model.Employee.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Employee.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Employee.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Employee.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Employee.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Employee.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Employee.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Employee.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Employee.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @if (ViewBag.Create == false)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.DateOfJoining, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">

                                    @Html.TextBoxFor(model => model.Employee.DateOfJoining, new { @class = "form-control", @type = "date", @Value = Model.Employee.DateOfJoining.ToString("yyyy-MM-dd") })

                                    @Html.ValidationMessageFor(model => model.Employee.DateOfJoining, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.DateOfJoining, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">

                                    @Html.TextBoxFor(model => model.Employee.DateOfJoining, new { @class = "form-control", @type = "date" })

                                    @Html.ValidationMessageFor(model => model.Employee.DateOfJoining, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        @if (ViewBag.Create == false && Model.Employee.TerminationDate.HasValue)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.TerminationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Employee.TerminationDate, new { @class = "form-control", @type = "date", @Value = Convert.ToString(Model.Employee.TerminationDate)})
                                    @Html.ValidationMessageFor(model => model.Employee.TerminationDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.TerminationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Employee.TerminationDate, new { @class = "form-control", @type = "date" })
                                    @Html.ValidationMessageFor(model => model.Employee.TerminationDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            @Html.LabelFor(model => model.Employee.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Employee.DepartmentId, new SelectList(Model.Employee.Departments, "Value", "Text"), "  -----Select List-----  ", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Employee.DepartmentId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IsAdmin, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsAdmin)
                                    @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }


            </div>

        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script type="text/javascript">
    function OnAjaxSuccess(data) {
        if (data.Success) {
            alert(data.Message);
            $('#divUser > .modal').modal('hide');
            window.location.href = data.RedirectUrl;
        }
        else {
            $('#divUser').html(data);
            $('#divUser > .modal').modal('show');
            $.validator.unobtrusive.parse('#userForm');
        }
    }
</script>
